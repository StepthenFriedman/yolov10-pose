# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv10 object detection model. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
# nc: 80 # number of classes
nc: 4 # number of classes
kpt_shape: [5, 3] # number of keypoints, number of dims (2 for x,y or 3 for x,y,visible)
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 3, C2f, [128, True]] #2
  - [-1, 1, GhostConv, [256, 3, 2]] # 3-P3/8
  - [-1, 6, C2fGhost, [256, True]] #4
  - [-1, 1, SCDown, [512, 3, 2]] # 5-P4/16
  - [-1, 6, C2fGhost, [512, True]] #6
  - [-1, 1, SCDown, [1024, 3, 2]] # 7-P5/32
  - [-1, 3, C2fGhost, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] # 9
  
# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #10
  - [[-1, 6], 1, Concat, [1]] # cat backbone P4 #11
  - [-1, 3, C2fGhost, [512]] # 12

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] #13
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3 #14
  - [-1, 3, C2fGhost, [256]] # 15 (P3/8-small)

  - [-1, 1, GhostConv, [256, 3, 2]] #16
  - [[-1, 12], 1, Concat, [1]] # cat head P4 #17
  - [-1, 3, C2fGhost, [512]] # 18 (P4/16-medium)

  - [-1, 1, SCDown, [512, 3, 2]]
  - [[-1, 9], 1, Concat, [1]] # cat head P5
  - [-1, 3, C2fCIBGhost, [1024, True, True]] # 22 (P5/32-large)

  - [[15, 18, 21], 1, v10Pose, [nc, kpt_shape]] # Detect(P3, P4, P5)